# Render deployment configuration
services:
  - type: web
    name: alx-travel-app
    env: python
    plan: starter
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: gunicorn alx_travel_app.wsgi:application
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: False
      - key: ALLOWED_HOSTS
        value: alx-travel-app.onrender.com
      - key: DATABASE_URL
        fromDatabase:
          name: alx-travel-db
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: alx-travel-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: alx-travel-redis
          property: connectionString
      - key: CHAPA_SECRET_KEY
        sync: false
      - key: CHAPA_WEBHOOK_SECRET
        sync: false
      - key: EMAIL_HOST_USER
        sync: false
      - key: EMAIL_HOST_PASSWORD
        sync: false

  - type: worker
    name: alx-travel-worker
    env: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A alx_travel_app worker --loglevel=info
    envVars:
      - key: SECRET_KEY
        fromService:
          type: web
          name: alx-travel-app
          envVarKey: SECRET_KEY
      - key: DEBUG
        value: False
      - key: DATABASE_URL
        fromService:
          type: web
          name: alx-travel-app
          envVarKey: DATABASE_URL
      - key: CELERY_BROKER_URL
        fromService:
          type: web
          name: alx-travel-app
          envVarKey: CELERY_BROKER_URL
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: web
          name: alx-travel-app
          envVarKey: CELERY_RESULT_BACKEND

databases:
  - name: alx-travel-db
    plan: starter

  - name: alx-travel-redis
    plan: starter
